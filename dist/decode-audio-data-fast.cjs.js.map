{"version":3,"file":"decode-audio-data-fast.cjs.js","sources":["../src/index.js"],"sourcesContent":["import parser from 'mp3-parser';\n\nconst CHUNK_MAX_SIZE = 1000 * 1000;\nconst DEFAULT_CONCURRENCY = 4;\nconst CONCURRENCY =\n  ((typeof navigator !== 'undefined' && navigator.hardwareConcurrency) || 1) > 2\n    ? navigator.hardwareConcurrency\n    : DEFAULT_CONCURRENCY;\n\n/**\n * Creates a new ArrayBuffer out of two Uint8Arrays\n *\n * @private\n * @param   {Uint8Array}  baseUint8Array  first Uint8Array.\n * @param   {Uint8Array}  buffer          second Uint8Array.\n * @return  {ArrayBuffer}                  The new ArrayBuffer\n */\nfunction makeChunk(array1, array2) {\n  const tmp = new Uint8Array(array1.byteLength + array2.byteLength);\n  tmp.set(array1, 0);\n  tmp.set(array2, array1.byteLength);\n  return tmp.buffer;\n}\n\nfunction makeSaveChunk(chunkArrayBuffers, tagsUInt8Array, sourceUInt8Array) {\n  return function saveChunk(chunk) {\n    chunkArrayBuffers.push(\n      makeChunk(\n        tagsUInt8Array,\n        sourceUInt8Array.subarray(\n          chunk.frames[0]._section.offset,\n          chunk.frames[chunk.frames.length - 1]._section.offset +\n            chunk.frames[chunk.frames.length - 1]._section.byteLength\n        )\n      )\n    );\n  };\n}\n\nfunction emptyChunk(chunk) {\n  chunk.byteLength = 0;\n  chunk.frames.length = 0;\n}\n\nfunction addChunkFrame(chunk, frame) {\n  chunk.byteLength = chunk.byteLength + frame._section.byteLength;\n  chunk.frames.push(frame);\n}\n\nconst asyncWorker = (source, items, fn, output) => async () => {\n  let next;\n  while ((next = items.pop())) {\n    output[source.get(next)] = await fn(next);\n  }\n};\n\nfunction getArrayBuffer(file) {\n  return new Promise((resolve) => {\n    let fileReader = new FileReader();\n    fileReader.onloadend = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.readAsArrayBuffer(file);\n  });\n}\n\n// Use a promise wrapper on top of event based syntax\n// for browsers (Safari) which do not support promise-based syntax.\nfunction decodeArrayBuffer(audioCtx, arrayBuffer) {\n  return new Promise(audioCtx.decodeAudioData.bind(audioCtx, arrayBuffer));\n}\n\nasync function getFileAudioBuffer(file, audioCtx, options = {}) {\n  /* Copyright (c) 2019, TimothÃ©e 'Tim' Pillard, @ziir @tpillard - ISC */\n\n  const { concurrency = CONCURRENCY } = options;\n\n  const arrayBuffer = await getArrayBuffer(file);\n  const view = new DataView(arrayBuffer);\n\n  const tags = parser.readTags(view);\n  const firstFrame = tags.pop();\n  const uInt8Array = new Uint8Array(arrayBuffer);\n  const tagsUInt8Array = uInt8Array.subarray(0, firstFrame._section.offset);\n  const chunkArrayBuffers = [];\n  const saveChunk = makeSaveChunk(\n    chunkArrayBuffers,\n    tagsUInt8Array,\n    uInt8Array\n  );\n  let chunk = { byteLength: 0, frames: [] };\n  let next = firstFrame._section.offset + firstFrame._section.byteLength;\n  while (next) {\n    const frame = parser.readFrame(view, next);\n    next = frame && frame._section.nextFrameIndex;\n\n    if (frame) {\n      const chunkEnd =\n        chunk && chunk.byteLength + frame._section.byteLength >= CHUNK_MAX_SIZE;\n      if (chunkEnd) {\n        saveChunk(chunk);\n        emptyChunk(chunk);\n      }\n\n      addChunkFrame(chunk, frame);\n    }\n\n    if (chunk && (!frame || !next)) {\n      saveChunk(chunk);\n    }\n  }\n\n  const workers = [];\n  const source = new Map(chunkArrayBuffers.map((chunk, idx) => [chunk, idx]));\n  const audioBuffers = new Array(chunkArrayBuffers.length);\n  const decode = decodeArrayBuffer.bind(null, audioCtx);\n\n  for (let i = 0; i < Math.min(concurrency, source.size); i++) {\n    workers.push(\n      asyncWorker(source, chunkArrayBuffers, decode, audioBuffers)()\n    );\n  }\n  await Promise.all(workers);\n\n  const { numberOfChannels, sampleRate } = audioBuffers[0];\n  let length = audioBuffers.reduce((acc, current) => acc + current.length, 0);\n\n  const audioBuffer = audioCtx.createBuffer(\n    numberOfChannels,\n    length,\n    sampleRate\n  );\n\n  for (let j = 0; j < numberOfChannels; j++) {\n    let offset = 0;\n    for (let i = 0; i < audioBuffers.length; i++) {\n      audioBuffer.copyToChannel(audioBuffers[i].getChannelData(j), j, offset);\n      offset += audioBuffers[i].length;\n    }\n  }\n\n  return audioBuffer;\n}\n\nexport { getFileAudioBuffer };\n"],"names":["parser"],"mappings":"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"}